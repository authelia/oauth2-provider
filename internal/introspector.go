// Code generated by MockGen. DO NOT EDIT.
// Source: authelia.com/provider/oauth2 (interfaces: TokenIntrospector)
//
// Generated by this command:
//
//	mockgen -package internal -destination internal/introspector.go authelia.com/provider/oauth2 TokenIntrospector
//
// Package internal is a generated GoMock package.
package internal

import (
	context "context"
	reflect "reflect"

	oauth2 "authelia.com/provider/oauth2"
	gomock "go.uber.org/mock/gomock"
)

// MockTokenIntrospector is a mock of TokenIntrospector interface.
type MockTokenIntrospector struct {
	ctrl     *gomock.Controller
	recorder *MockTokenIntrospectorMockRecorder
}

// MockTokenIntrospectorMockRecorder is the mock recorder for MockTokenIntrospector.
type MockTokenIntrospectorMockRecorder struct {
	mock *MockTokenIntrospector
}

// NewMockTokenIntrospector creates a new mock instance.
func NewMockTokenIntrospector(ctrl *gomock.Controller) *MockTokenIntrospector {
	mock := &MockTokenIntrospector{ctrl: ctrl}
	mock.recorder = &MockTokenIntrospectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenIntrospector) EXPECT() *MockTokenIntrospectorMockRecorder {
	return m.recorder
}

// IntrospectToken mocks base method.
func (m *MockTokenIntrospector) IntrospectToken(arg0 context.Context, arg1 string, arg2 oauth2.TokenType, arg3 oauth2.AccessRequester, arg4 []string) (oauth2.TokenType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IntrospectToken", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(oauth2.TokenType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IntrospectToken indicates an expected call of IntrospectToken.
func (mr *MockTokenIntrospectorMockRecorder) IntrospectToken(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IntrospectToken", reflect.TypeOf((*MockTokenIntrospector)(nil).IntrospectToken), arg0, arg1, arg2, arg3, arg4)
}
