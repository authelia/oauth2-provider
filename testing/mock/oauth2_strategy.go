// Code generated by MockGen. DO NOT EDIT.
// Source: authelia.com/provider/oauth2/handler/oauth2 (interfaces: CoreStrategy)
//
// Generated by this command:
//
//	mockgen -package mock -destination testing/mock/oauth2_strategy.go authelia.com/provider/oauth2/handler/oauth2 CoreStrategy
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	oauth2 "authelia.com/provider/oauth2"
	gomock "go.uber.org/mock/gomock"
)

// MockCoreStrategy is a mock of CoreStrategy interface.
type MockCoreStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockCoreStrategyMockRecorder
}

// MockCoreStrategyMockRecorder is the mock recorder for MockCoreStrategy.
type MockCoreStrategyMockRecorder struct {
	mock *MockCoreStrategy
}

// NewMockCoreStrategy creates a new mock instance.
func NewMockCoreStrategy(ctrl *gomock.Controller) *MockCoreStrategy {
	mock := &MockCoreStrategy{ctrl: ctrl}
	mock.recorder = &MockCoreStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoreStrategy) EXPECT() *MockCoreStrategyMockRecorder {
	return m.recorder
}

// AccessTokenSignature mocks base method.
func (m *MockCoreStrategy) AccessTokenSignature(arg0 context.Context, arg1 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccessTokenSignature", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// AccessTokenSignature indicates an expected call of AccessTokenSignature.
func (mr *MockCoreStrategyMockRecorder) AccessTokenSignature(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccessTokenSignature", reflect.TypeOf((*MockCoreStrategy)(nil).AccessTokenSignature), arg0, arg1)
}

// AuthorizeCodeSignature mocks base method.
func (m *MockCoreStrategy) AuthorizeCodeSignature(arg0 context.Context, arg1 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthorizeCodeSignature", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// AuthorizeCodeSignature indicates an expected call of AuthorizeCodeSignature.
func (mr *MockCoreStrategyMockRecorder) AuthorizeCodeSignature(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthorizeCodeSignature", reflect.TypeOf((*MockCoreStrategy)(nil).AuthorizeCodeSignature), arg0, arg1)
}

// GenerateAccessToken mocks base method.
func (m *MockCoreStrategy) GenerateAccessToken(arg0 context.Context, arg1 oauth2.Requester) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAccessToken", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateAccessToken indicates an expected call of GenerateAccessToken.
func (mr *MockCoreStrategyMockRecorder) GenerateAccessToken(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAccessToken", reflect.TypeOf((*MockCoreStrategy)(nil).GenerateAccessToken), arg0, arg1)
}

// GenerateAuthorizeCode mocks base method.
func (m *MockCoreStrategy) GenerateAuthorizeCode(arg0 context.Context, arg1 oauth2.Requester) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAuthorizeCode", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateAuthorizeCode indicates an expected call of GenerateAuthorizeCode.
func (mr *MockCoreStrategyMockRecorder) GenerateAuthorizeCode(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAuthorizeCode", reflect.TypeOf((*MockCoreStrategy)(nil).GenerateAuthorizeCode), arg0, arg1)
}

// GenerateRFC8628DeviceCode mocks base method.
func (m *MockCoreStrategy) GenerateRFC8628DeviceCode(arg0 context.Context) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRFC8628DeviceCode", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateRFC8628DeviceCode indicates an expected call of GenerateRFC8628DeviceCode.
func (mr *MockCoreStrategyMockRecorder) GenerateRFC8628DeviceCode(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRFC8628DeviceCode", reflect.TypeOf((*MockCoreStrategy)(nil).GenerateRFC8628DeviceCode), arg0)
}

// GenerateRFC8628UserCode mocks base method.
func (m *MockCoreStrategy) GenerateRFC8628UserCode(arg0 context.Context) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRFC8628UserCode", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateRFC8628UserCode indicates an expected call of GenerateRFC8628UserCode.
func (mr *MockCoreStrategyMockRecorder) GenerateRFC8628UserCode(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRFC8628UserCode", reflect.TypeOf((*MockCoreStrategy)(nil).GenerateRFC8628UserCode), arg0)
}

// GenerateRefreshToken mocks base method.
func (m *MockCoreStrategy) GenerateRefreshToken(arg0 context.Context, arg1 oauth2.Requester) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRefreshToken", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateRefreshToken indicates an expected call of GenerateRefreshToken.
func (mr *MockCoreStrategyMockRecorder) GenerateRefreshToken(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRefreshToken", reflect.TypeOf((*MockCoreStrategy)(nil).GenerateRefreshToken), arg0, arg1)
}

// RFC8628DeviceCodeSignature mocks base method.
func (m *MockCoreStrategy) RFC8628DeviceCodeSignature(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RFC8628DeviceCodeSignature", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RFC8628DeviceCodeSignature indicates an expected call of RFC8628DeviceCodeSignature.
func (mr *MockCoreStrategyMockRecorder) RFC8628DeviceCodeSignature(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RFC8628DeviceCodeSignature", reflect.TypeOf((*MockCoreStrategy)(nil).RFC8628DeviceCodeSignature), arg0, arg1)
}

// RFC8628UserCodeSignature mocks base method.
func (m *MockCoreStrategy) RFC8628UserCodeSignature(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RFC8628UserCodeSignature", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RFC8628UserCodeSignature indicates an expected call of RFC8628UserCodeSignature.
func (mr *MockCoreStrategyMockRecorder) RFC8628UserCodeSignature(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RFC8628UserCodeSignature", reflect.TypeOf((*MockCoreStrategy)(nil).RFC8628UserCodeSignature), arg0, arg1)
}

// RefreshTokenSignature mocks base method.
func (m *MockCoreStrategy) RefreshTokenSignature(arg0 context.Context, arg1 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshTokenSignature", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// RefreshTokenSignature indicates an expected call of RefreshTokenSignature.
func (mr *MockCoreStrategyMockRecorder) RefreshTokenSignature(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshTokenSignature", reflect.TypeOf((*MockCoreStrategy)(nil).RefreshTokenSignature), arg0, arg1)
}

// ValidateAccessToken mocks base method.
func (m *MockCoreStrategy) ValidateAccessToken(arg0 context.Context, arg1 oauth2.Requester, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAccessToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateAccessToken indicates an expected call of ValidateAccessToken.
func (mr *MockCoreStrategyMockRecorder) ValidateAccessToken(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAccessToken", reflect.TypeOf((*MockCoreStrategy)(nil).ValidateAccessToken), arg0, arg1, arg2)
}

// ValidateAuthorizeCode mocks base method.
func (m *MockCoreStrategy) ValidateAuthorizeCode(arg0 context.Context, arg1 oauth2.Requester, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAuthorizeCode", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateAuthorizeCode indicates an expected call of ValidateAuthorizeCode.
func (mr *MockCoreStrategyMockRecorder) ValidateAuthorizeCode(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAuthorizeCode", reflect.TypeOf((*MockCoreStrategy)(nil).ValidateAuthorizeCode), arg0, arg1, arg2)
}

// ValidateRFC8628DeviceCode mocks base method.
func (m *MockCoreStrategy) ValidateRFC8628DeviceCode(arg0 context.Context, arg1 oauth2.Requester, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRFC8628DeviceCode", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRFC8628DeviceCode indicates an expected call of ValidateRFC8628DeviceCode.
func (mr *MockCoreStrategyMockRecorder) ValidateRFC8628DeviceCode(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRFC8628DeviceCode", reflect.TypeOf((*MockCoreStrategy)(nil).ValidateRFC8628DeviceCode), arg0, arg1, arg2)
}

// ValidateRFC8628UserCode mocks base method.
func (m *MockCoreStrategy) ValidateRFC8628UserCode(arg0 context.Context, arg1 oauth2.Requester, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRFC8628UserCode", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRFC8628UserCode indicates an expected call of ValidateRFC8628UserCode.
func (mr *MockCoreStrategyMockRecorder) ValidateRFC8628UserCode(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRFC8628UserCode", reflect.TypeOf((*MockCoreStrategy)(nil).ValidateRFC8628UserCode), arg0, arg1, arg2)
}

// ValidateRefreshToken mocks base method.
func (m *MockCoreStrategy) ValidateRefreshToken(arg0 context.Context, arg1 oauth2.Requester, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRefreshToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRefreshToken indicates an expected call of ValidateRefreshToken.
func (mr *MockCoreStrategyMockRecorder) ValidateRefreshToken(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRefreshToken", reflect.TypeOf((*MockCoreStrategy)(nil).ValidateRefreshToken), arg0, arg1, arg2)
}
